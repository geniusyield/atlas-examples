{
    "definitions": {
        "AddParams": {
            "properties": {
                "apAmountA": {
                    "type": "integer"
                },
                "apAmountB": {
                    "type": "integer"
                },
                "apCoinA": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "apCoinB": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "apFactoryAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "apGPParams": {
                    "$ref": "#/definitions/GeneralParams"
                }
            },
            "required": [
                "apGPParams",
                "apFactoryAssetClass",
                "apCoinA",
                "apCoinB",
                "apAmountA",
                "apAmountB"
            ],
            "type": "object"
        },
        "ClosePoolParams": {
            "properties": {
                "clppFactoryAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "clppGPParams": {
                    "$ref": "#/definitions/GeneralParams"
                },
                "clppTokenAAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "clppTokenBAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                }
            },
            "required": [
                "clppGPParams",
                "clppFactoryAssetClass",
                "clppTokenAAssetClass",
                "clppTokenBAssetClass"
            ],
            "type": "object"
        },
        "ClosePoolResponse": {
            "properties": {
                "clprUnsignedTxResponse": {
                    "$ref": "#/definitions/UnsignedTxResponse"
                }
            },
            "required": [
                "clprUnsignedTxResponse"
            ],
            "type": "object"
        },
        "CreatePoolParams": {
            "properties": {
                "cppFactoryAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "cppGPParams": {
                    "$ref": "#/definitions/GeneralParams"
                },
                "cppTokenAAmount": {
                    "type": "integer"
                },
                "cppTokenAAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "cppTokenBAmount": {
                    "type": "integer"
                },
                "cppTokenBAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                }
            },
            "required": [
                "cppGPParams",
                "cppFactoryAssetClass",
                "cppTokenAAssetClass",
                "cppTokenAAmount",
                "cppTokenBAssetClass",
                "cppTokenBAmount"
            ],
            "type": "object"
        },
        "CreatePoolResponse": {
            "properties": {
                "cprUnsignedTxResponse": {
                    "$ref": "#/definitions/UnsignedTxResponse"
                }
            },
            "required": [
                "cprUnsignedTxResponse"
            ],
            "type": "object"
        },
        "CreateTokensParams": {
            "properties": {
                "ctpChangeAddr": {
                    "$ref": "#/definitions/GYAddress"
                },
                "ctpCollateral": {
                    "example": "8282582004ffecdf5f3ced5c5c788833415bcbef26e3e21290fcebcf8216327e21569e420082583900e1cbb80db89e292269aeb93ec15eb963dda5176b66949fe1c2a6a38d1b930e9f7add78a174a21000e989ff551366dcd127028cb2aa39f6161a004c4b40",
                    "format": "cbor hex",
                    "pattern": "[0-9a-fA-F]+",
                    "type": "string"
                },
                "ctpDatumCount": {
                    "type": "integer"
                },
                "ctpName": {
                    "$ref": "#/definitions/GYTokenName"
                },
                "ctpUsedAddrs": {
                    "items": {
                        "$ref": "#/definitions/GYAddress"
                    },
                    "type": "array"
                }
            },
            "required": [
                "ctpUsedAddrs",
                "ctpChangeAddr",
                "ctpCollateral",
                "ctpName",
                "ctpDatumCount"
            ],
            "type": "object"
        },
        "DefaultTxResponse": {
            "properties": {
                "unsignedTxResponse": {
                    "$ref": "#/definitions/UnsignedTxResponse"
                }
            },
            "required": [
                "unsignedTxResponse"
            ],
            "type": "object"
        },
        "GYAddress": {
            "description": "An address, serialised as CBOR.",
            "example": "00e1cbb80db89e292269aeb93ec15eb963dda5176b66949fe1c2a6a38d1b930e9f7add78a174a21000e989ff551366dcd127028cb2aa39f616",
            "format": "cbor hex",
            "maxLength": 114,
            "minLength": 114,
            "type": "string"
        },
        "GYAssetClass": {
            "description": "This is an asset class, i.e. either lovelace or some other token with its minting policy and token name.",
            "example": "ff80aaaf03a273b8f5c558168dc0e2377eea810badbae6eceefc14ef.GOLD",
            "maxProperties": 1,
            "minProperties": 1,
            "properties": {
                "GYLovelace": {
                    "example": [],
                    "items": {},
                    "maxItems": 0,
                    "type": "array"
                },
                "GYToken": {
                    "type": "string"
                }
            },
            "type": "string"
        },
        "GYTokenName": {
            "description": "This is the name of a token.",
            "example": "476f6c64",
            "format": "hex",
            "maxLength": 64,
            "pattern": "[0-9a-fA-F]+",
            "type": "string"
        },
        "GYTx": {
            "type": "string"
        },
        "GYTxId": {
            "example": "a8d75b90a052302c1232bedd626720966b1697fe38de556c617c340233688935",
            "type": "string"
        },
        "GYTxOutRef": {
            "example": "4293386fef391299c9886dc0ef3e8676cbdbc2c9f2773507f1f838e00043a189#1",
            "format": "hex",
            "pattern": "[0-9a-fA-F]{64}#\"d+",
            "type": "string"
        },
        "GYValue": {
            "additionalProperties": {
                "type": "integer"
            },
            "description": "A multi asset quantity, represented as map where each key represents an asset: policy ID and token name in hex concatenated by a dot.",
            "example": {
                "ff80aaaf03a273b8f5c558168dc0e2377eea810badbae6eceefc14ef.474f4c44": 101,
                "lovelace": 22
            },
            "type": "object"
        },
        "GeneralParams": {
            "properties": {
                "gpChangeAddr": {
                    "$ref": "#/definitions/GYAddress"
                },
                "gpCollateral": {
                    "example": "8282582004ffecdf5f3ced5c5c788833415bcbef26e3e21290fcebcf8216327e21569e420082583900e1cbb80db89e292269aeb93ec15eb963dda5176b66949fe1c2a6a38d1b930e9f7add78a174a21000e989ff551366dcd127028cb2aa39f6161a004c4b40",
                    "format": "cbor hex",
                    "pattern": "[0-9a-fA-F]+",
                    "type": "string"
                },
                "gpUsedAddrs": {
                    "items": {
                        "$ref": "#/definitions/GYAddress"
                    },
                    "type": "array"
                }
            },
            "required": [
                "gpUsedAddrs",
                "gpChangeAddr",
                "gpCollateral"
            ],
            "type": "object"
        },
        "HelloWorldDataResponse": {
            "properties": {
                "hwdrMessage": {
                    "items": {
                        "items": [
                            {
                                "$ref": "#/definitions/GYTxOutRef"
                            },
                            {
                                "items": {
                                    "type": "integer"
                                },
                                "type": "array"
                            }
                        ],
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array"
                    },
                    "type": "array"
                }
            },
            "required": [
                "hwdrMessage"
            ],
            "type": "object"
        },
        "HelloWorldParams": {
            "properties": {
                "hwpAddr": {
                    "$ref": "#/definitions/GYAddress"
                },
                "hwpUsedAddrs": {
                    "items": {
                        "$ref": "#/definitions/GYAddress"
                    },
                    "type": "array"
                }
            },
            "required": [
                "hwpUsedAddrs",
                "hwpAddr"
            ],
            "type": "object"
        },
        "ListBalanceParams": {
            "properties": {
                "lbpUsedAddrs": {
                    "items": {
                        "$ref": "#/definitions/GYAddress"
                    },
                    "type": "array"
                }
            },
            "required": [
                "lbpUsedAddrs"
            ],
            "type": "object"
        },
        "ListBalanceResponse": {
            "properties": {
                "lbrValue": {
                    "$ref": "#/definitions/GYValue"
                }
            },
            "required": [
                "lbrValue"
            ],
            "type": "object"
        },
        "ListFactoryParams": {
            "properties": {
                "lfAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                }
            },
            "required": [
                "lfAssetClass"
            ],
            "type": "object"
        },
        "ListFactoryResponse": {
            "properties": {
                "lfMessage": {
                    "items": {
                        "items": [
                            {
                                "$ref": "#/definitions/GYTxOutRef"
                            },
                            {
                                "type": "string"
                            }
                        ],
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array"
                    },
                    "type": "array"
                }
            },
            "required": [
                "lfMessage"
            ],
            "type": "object"
        },
        "ListPoolParams": {
            "properties": {
                "lppFactoryAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                }
            },
            "required": [
                "lppFactoryAssetClass"
            ],
            "type": "object"
        },
        "ListPoolResponse": {
            "properties": {
                "lprList": {
                    "items": {
                        "$ref": "#/definitions/SinglePoolResponse"
                    },
                    "type": "array"
                }
            },
            "required": [
                "lprList"
            ],
            "type": "object"
        },
        "RemoveParams": {
            "properties": {
                "rpCoinA": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "rpCoinB": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "rpDiff": {
                    "type": "integer"
                },
                "rpFactoryAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "rpGPParams": {
                    "$ref": "#/definitions/GeneralParams"
                }
            },
            "required": [
                "rpGPParams",
                "rpFactoryAssetClass",
                "rpCoinA",
                "rpCoinB",
                "rpDiff"
            ],
            "type": "object"
        },
        "SinglePoolResponse": {
            "properties": {
                "sprAmountA": {
                    "type": "integer"
                },
                "sprAmountB": {
                    "type": "integer"
                },
                "sprAmountLiquidity": {
                    "type": "integer"
                },
                "sprCoinA": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "sprCoinB": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "sprLiquidity": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "sprOutRef": {
                    "$ref": "#/definitions/GYTxOutRef"
                }
            },
            "required": [
                "sprOutRef",
                "sprLiquidity",
                "sprAmountLiquidity",
                "sprCoinA",
                "sprAmountA",
                "sprCoinB",
                "sprAmountB"
            ],
            "type": "object"
        },
        "StartFactoryParams": {
            "properties": {
                "spfAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "spfGPParams": {
                    "$ref": "#/definitions/GeneralParams"
                }
            },
            "required": [
                "spfGPParams",
                "spfAssetClass"
            ],
            "type": "object"
        },
        "StartFactoryResponse": {
            "properties": {
                "srfUnsignedTxResponse": {
                    "$ref": "#/definitions/UnsignedTxResponse"
                }
            },
            "required": [
                "srfUnsignedTxResponse"
            ],
            "type": "object"
        },
        "StartParams": {
            "properties": {
                "spAmount": {
                    "exclusiveMinimum": false,
                    "minimum": 0,
                    "type": "integer"
                },
                "spGPParams": {
                    "$ref": "#/definitions/GeneralParams"
                },
                "spTokenName": {
                    "$ref": "#/definitions/GYTokenName"
                }
            },
            "required": [
                "spGPParams",
                "spTokenName",
                "spAmount"
            ],
            "type": "object"
        },
        "StartResponse": {
            "properties": {
                "srAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "srUnsignedTxResponse": {
                    "$ref": "#/definitions/UnsignedTxResponse"
                }
            },
            "required": [
                "srAssetClass",
                "srUnsignedTxResponse"
            ],
            "type": "object"
        },
        "SubmitTxResponse": {
            "properties": {
                "submitTxFee": {
                    "type": "integer"
                },
                "submitTxId": {
                    "$ref": "#/definitions/GYTxId"
                }
            },
            "required": [
                "submitTxFee",
                "submitTxId"
            ],
            "type": "object"
        },
        "SwapParams": {
            "properties": {
                "swpAmountA": {
                    "type": "integer"
                },
                "swpAmountB": {
                    "type": "integer"
                },
                "swpCoinA": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "swpCoinB": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "swpFactoryAssetClass": {
                    "$ref": "#/definitions/GYAssetClass"
                },
                "swpGPParams": {
                    "$ref": "#/definitions/GeneralParams"
                }
            },
            "required": [
                "swpGPParams",
                "swpFactoryAssetClass",
                "swpCoinA",
                "swpCoinB",
                "swpAmountA",
                "swpAmountB"
            ],
            "type": "object"
        },
        "UnsignedTxResponse": {
            "properties": {
                "urspTxBodyHex": {
                    "type": "string"
                },
                "urspTxFee": {
                    "type": "integer"
                },
                "urspUtxoRefIdx": {
                    "maximum": 1.8446744073709551615e19,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "urspTxBodyHex"
            ],
            "type": "object"
        }
    },
    "info": {
        "title": "",
        "version": ""
    },
    "paths": {
        "/dex/factory/create": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StartFactoryParams"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StartFactoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/dex/factory/list": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListFactoryParams"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ListFactoryResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/dex/pool/add": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddParams"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultTxResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/dex/pool/close": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClosePoolParams"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ClosePoolResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/dex/pool/create": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreatePoolParams"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CreatePoolResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/dex/pool/list": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListPoolParams"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ListPoolResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/dex/pool/remove": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RemoveParams"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultTxResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/dex/pool/swap": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SwapParams"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultTxResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/dex/token/create": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StartParams"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StartResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/dex/token/createDatumToken": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateTokensParams"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UnsignedTxResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/dex/token/listDatum": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HelloWorldParams"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/HelloWorldDataResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/dex/wallet/balance": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ListBalanceParams"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ListBalanceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/tx/submit": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GYTx"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SubmitTxResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        }
    },
    "swagger": "2.0"
}